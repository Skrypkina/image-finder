{"version":3,"sources":["Context.js","components/Header/Header.js","components/GaleryItem/GaleryItem.js","components/Galery/Galery.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","images","setImages","query","setQuery","page","setPage","isLoading","setIsLoading","isModalOpen","setIsModalOpen","imageId","setImageId","useEffect","axios","get","then","data","prev","hits","Provider","value","handleQueryChange","handlePageChange","handleOpenModal","id","handleCloseModal","Header","setValue","useContext","className","type","onClick","placeholder","autoComplete","autoFocus","onChange","event","preventDefault","target","onKeyDown","e","key","GaleryItem","webformatURL","tags","src","alt","Galery","renderImages","map","image","Modal","img","backdropRef","useRef","handleKeyPress","code","window","addEventListener","removeEventListener","ref","current","App","endListRef","imageToFind","find","length","Button","renderButton","scrollIntoView","behavior","document","body","classList","add","remove","renderModal","largeImageURL","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e6d246f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst ContextProvider = ({ children }) => {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [imageId, setImageId] = useState(null);\n\n  const handleOpenModal = (id) => {\n    setIsModalOpen(true);\n    setImageId(id);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleQueryChange = (query) => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    const BASE_URL =\n      \"https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=\";\n    axios\n      .get(\n        `${BASE_URL}${query}&page=${page}&per_page=12&key=12647850-3be04ccdb337b060210fd27c5`\n      )\n      .then((data) => {\n        setImages((prev) => [...prev, ...data.data.hits]);\n        setIsLoading(false);\n      });\n  }, [query, page]);\n\n  const handlePageChange = () => {\n    setPage((prev) => prev + 1);\n  };\n  return (\n    <Context.Provider\n      value={{\n        images,\n        handleQueryChange,\n        query,\n        handlePageChange,\n        isLoading,\n        handleOpenModal,\n        handleCloseModal,\n        isModalOpen,\n        imageId,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport { ContextProvider, Context };\n","import React, { useState, useContext } from \"react\";\nimport \"./styles.css\";\nimport { Context } from \"../../Context\";\n\nconst Header = () => {\n  const [value, setValue] = useState(\"\");\n  const { handleQueryChange } = useContext(Context);\n  const handleChange = (event) => {\n    event.preventDefault();\n    setValue(event.target.value);\n  };\n  const onKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleQueryChange(value);\n      setValue(\"\");\n    }\n  };\n\n  const handleSubmit = () => {\n    handleQueryChange(value);\n    setValue(\"\");\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\">\n        <button\n          className=\"SearchForm-button\"\n          type=\"button\"\n          onClick={handleSubmit}\n        >\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Search images\"\n          className=\"SearchForm-input\"\n          autoComplete=\"off\"\n          autoFocus\n          value={value}\n          onChange={handleChange}\n          onKeyDown={onKeyPress}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../Context\";\nimport \"./styles.css\";\n\nexport const GaleryItem = ({ id, webformatURL, tags }) => {\n  const { handleOpenModal } = useContext(Context);\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => handleOpenModal(id)}\n      />\n    </li>\n  );\n};\n\nexport default GaleryItem;\n","import React, { useContext } from \"react\";\nimport GaleryItem from \"../GaleryItem/GaleryItem\";\nimport \"./styles.css\";\nimport { Context } from \"../../Context\";\n\nconst Galery = () => {\n  const { images } = useContext(Context);\n\n  const renderImages = images.map((image) => {\n    return (\n      <GaleryItem\n        id={image.id}\n        webformatURL={image.webformatURL}\n        tags={image.tags}\n        key={image.id}\n      />\n    );\n  });\n  return <ul className=\"ImageGallery\">{renderImages}</ul>;\n};\nexport default Galery;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { Context } from \"../../Context\";\nimport \"./styles.css\";\n\nconst Modal = ({ img, tags }) => {\n  const { handleCloseModal } = useContext(Context);\n  const backdropRef = useRef(null);\n  const handleKeyPress = (event) => {\n    if (event.code !== \"Escape\") return;\n    handleCloseModal();\n  };\n  const handleBackdropClick = (event) => {\n    if (backdropRef.current && event.target !== backdropRef.current) {\n      return;\n    }\n    handleCloseModal();\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n  return (\n    <div className=\"Overlay\" ref={backdropRef} onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={img} alt={tags} />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Galery from \"./components/Galery/Galery\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal/Modal\";\nimport { Context } from \"./Context\";\n\nfunction App() {\n  const {\n    images,\n    handlePageChange,\n    isLoading,\n    imageId,\n    isModalOpen,\n  } = useContext(Context);\n  const endListRef = useRef(null);\n\n  const imageToFind = images.find((image) => image.id === imageId);\n\n  const renderImages = images.length > 0 && <Galery />;\n\n  const Button = () => (\n    <button type=\"button\" className=\"button\" onClick={handlePageChange}>\n      Load more\n    </button>\n  );\n  const renderButton = images.length > 0 && <Button />;\n  const scrollToBottom = () => {\n    endListRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(scrollToBottom, [images]);\n\n  useEffect(() => {\n    isModalOpen\n      ? document.body.classList.add(\"no-sroll\")\n      : document.body.classList.remove(\"no-sroll\");\n  }, [isModalOpen]);\n  const renderModal = isModalOpen && (\n    <Modal img={imageToFind.largeImageURL} tags={imageToFind.tags} />\n  );\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {renderImages}\n      {isLoading && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000}\n          className=\"loader\"\n        />\n      )}\n      {renderModal}\n      <div ref={endListRef}></div>\n      {renderButton}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ContextProvider } from \"./Context\";\n\nReactDOM.render(\n  <ContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}